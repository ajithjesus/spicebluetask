{"version":3,"sources":["redux/action/Task.js","compoents/constant/constant.js","compoents/Taks/Taks.js","App.js","reportWebVitals.js","redux/reducer/Task.js","index.js"],"names":["USER_LOGIN","TASK_ARRAY","DELETE_TASk","getUser","tokens_id","dispatch","a","fetch","method","headers","Authorization","Accept","then","response","json","data","console","log","JSON","stringify","string_date","parts","split","mydate","Date","toString","err","Task","props","handlechange","event","setState","taskdescirption","target","value","OnchangeTaskDate","date","taks_date","OnchangeTaskTime","taks_time","assignFunction","event_value","assignUser","handleSubmit","preventDefault","state","btn_id","id","Moment","format","requestOptions","token","body","assigned_user","task_date","task_time","time_zone","is_completed","task_msg","alert","getTask","hide_show","taskarray","results","getTask_single","date_format","constant","getdeletetask","hide_and_show","this","email","password","type","LoginAction","className","Container","Row","Col","md","span","offset","onClick","aria-hidden","Form","Group","controlId","Label","Control","name","onChange","placeholder","selected","minDate","dateFormat","showTimeSelect","showTimeSelectOnly","timeCaption","as","Button","variant","Table","striped","bordered","hover","map","item","class","Component","connect","Login","deleteTask","App","exact","path","render","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","cartproducts","message","rootReducer","redux","action","taskarray_data","persistConfig","key","storage","persistedReducer","persistReducer","store","composeWithDevTools","thunk","persistor","persistStore","ReactDOM","loading","document","getElementById"],"mappings":"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","file":"static/js/main.5ec575a8.chunk.js","sourcesContent":["export const USER_LOGIN=\"USER_LOGIN\";\r\nexport const TASK_ARRAY=\"TASK_ARRAY\";\r\nexport const DELETE_TASk=\"DELETE_TASk\";\r\n\r\n\r\n\r\n\r\nexport const userlogin=()=>\r\n{\r\n    return async (dispatch) => {\r\n        const requestOptions = {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify({ email : 'spicebluetest2@gmail.com',password : '12345678' })\r\n        };\r\n        fetch('https://stage.api.sloovi.com/login', requestOptions)\r\n            .then(response => response.json())\r\n            .then(data =>\r\n              {\r\n                dispatch({ type: \"USER_LOGIN\", token:data.results.token});\r\n               \r\n              }\r\n            )\r\n            return true       \r\n                \r\n    }\r\n       \r\n}\r\n\r\nexport const getUser=(tokens_id)=>\r\n{\r\n    return async (dispatch) => {\r\n       \r\n    const requestOptions = {\r\n      method: \"GET\",\r\n      headers: {\r\n        Authorization: \"Bearer \" + tokens_id,\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n    fetch(\"https://stage.api.sloovi.com/user\", requestOptions)\r\n      .then((response) => response.json())\r\n      .then((data) =>\r\n      {\r\n      console.log(\"&&&&&&&&&\");\r\n      console.log(JSON.stringify(data));\r\n      console.log(\"&&&&&&&&&\");\r\n\r\n\r\n      }\r\n     );\r\n     return true;\r\n  };\r\n  \r\n}\r\n\r\nexport const GetTaskAction=(tokens_id)=>\r\n{\r\n    return async (dispatch) => {\r\n       \r\n      const requestOptions = {\r\n        method: \"GET\",\r\n        headers: {\r\n          Authorization: \"Bearer \" + tokens_id,\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      };\r\n      fetch(\r\n        \"https://stage.api.sloovi.com/task/lead_04412ba1d622466cab1f0ad941fcf303\",\r\n        requestOptions\r\n      )\r\n        .then((response) => response.json())\r\n        .then((data) => {\r\n          dispatch({ type: \"TASK_ARRAY\", taskarray_data:data.results});\r\n        \r\n        });\r\n        return true;\r\n  \r\n}\r\n\r\n}\r\n\r\n\r\nexport const TaskDeleteAction=(tokens_id,id)=>\r\n{\r\n    return (dispatch) => {\r\n      const requestOptions = {\r\n        method: \"DELETE\",\r\n        headers: {\r\n          Authorization: \"Bearer \" + tokens_id,\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      };\r\n      fetch(\r\n        \"https://stage.api.sloovi.com/task/lead_04412ba1d622466cab1f0ad941fcf303/\" +\r\n          id,\r\n        requestOptions\r\n      )\r\n        .then((response) => response.json())\r\n        .then((data) => {\r\n          {\r\n         dispatch({ type: \"DELETE_TASk\", deleteTask: \"DeleteSucess\"});\r\n\r\n         \r\n            \r\n            \r\n          }\r\n        });\r\n      \r\n    }\r\n    \r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","const stringToDate1 = (string_date) => {\r\n    try {\r\n      var parts = string_date.split('-');\r\n      if (parts[2] === \"31\") {\r\n        parts[2] = \"01\";\r\n      } else {\r\n        //parts[2] = (parts[2] * 1) + 1;\r\n        parts[2] = (parts[2] * 1);\r\n      }\r\n      var mydate = new Date(parts[0] + \"/\" + parts[1] + \"/\" + parts[2]);\r\n      //mydate = mydate.toISOString().substr(0, 10);\r\n      if (parts[0] === \"0999\" || parts[0] === \"8999\" || parts[0] === \"1000\" || parts[0] === \"9000\") {\r\n        mydate = '';\r\n      }\r\n      if ((mydate.toString()) === \"Invalid Date\") {\r\n        return '';\r\n      }\r\n      return mydate;\r\n    }\r\n    catch (err) {\r\n      return '';\r\n    }\r\n  }\r\n\r\n  export default{\r\n    stringToDate1\r\n  }","import React, { Component } from \"react\";\r\nimport { Container, Row, Col, Form, Button, Table } from \"react-bootstrap\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport * as LoginAction from \"../../redux/action/Task\";\r\n\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n\r\nimport \"./Taks.css\";\r\nimport Moment from \"moment\";\r\nimport constant from \"../constant/constant\";\r\n\r\nvar data = [\r\n  { author: \"Pete Hunt\", text: \"This is one comment\" },\r\n  { author: \"Jordan Walke\", text: \"This is *another* comment\" },\r\n];\r\n\r\nclass Task extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      token: \"\",\r\n      taskdescirption: \"\",\r\n      taks_time: new Date(),\r\n      taks_date: new Date(),\r\n      assignUser: \"Ajithkumar\",\r\n      taskarray: [],\r\n      btn_id: \"add\",\r\n      id: \"\",\r\n      hide_show: false,\r\n    };\r\n  }\r\n   async componentDidMount (){\r\n  let loginsucess=await this.props.dispatch(LoginAction.userlogin());\r\n    if(loginsucess)\r\n    {\r\n      var tokens_id = this.props.token;\r\n      let getUserSuccess=await this.props.dispatch(LoginAction.getUser(tokens_id));\r\n      if(getUserSuccess)\r\n      {\r\n      this.getTask();\r\n      }\r\n    }\r\n  }\r\n\r\n  handlechange = (event) => {\r\n    this.setState({ taskdescirption: event.target.value });\r\n  };\r\n\r\n  OnchangeTaskDate = (date) => {\r\n    this.setState({ taks_date: date });\r\n  };\r\n  OnchangeTaskTime = (date) => {\r\n    this.setState({ taks_time: date });\r\n  };\r\n\r\n  assignFunction = (event) => {\r\n    const event_value = event.target.value.toString();\r\n    this.setState({ assignUser: event_value });\r\n  };\r\n\r\n  handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    let {\r\n      taskdescirption,\r\n      taks_time,\r\n      taks_date,\r\n      assignUser,\r\n      btn_id,\r\n      id,\r\n    } = this.state;\r\n\r\n   \r\n    taks_date = Moment(taks_date).format(\"YYYY-MM-DD\");\r\n    taks_time = Moment(taks_time).format(\"ss\") * 1;\r\n    let time_zone = 15;\r\n    let is_completed = 0;\r\n\r\n    if (btn_id === \"add\") {\r\n      const requestOptions = {\r\n        method: \"POST\",\r\n        headers: {\r\n          Authorization: \"Bearer \" + this.props.token,\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          assigned_user: assignUser,\r\n          task_date: taks_date,\r\n          task_time: taks_time,\r\n          time_zone: time_zone,\r\n          is_completed: is_completed,\r\n          task_msg: taskdescirption,\r\n        }),\r\n      };\r\n      fetch(\r\n        \"https://stage.api.sloovi.com/task/lead_04412ba1d622466cab1f0ad941fcf303\",\r\n        requestOptions\r\n      )\r\n        .then((response) => response.json())\r\n        .then((data) => {\r\n          alert(\"Added Successfully\");\r\n          this.getTask();\r\n          this.setState({\r\n            taskdescirption: \"\",\r\n            taks_time: new Date(),\r\n            taks_date: new Date(),\r\n            assignUser: \"Ajithkumar\",\r\n            hide_show: false,\r\n          });\r\n        });\r\n    } else {\r\n      const requestOptions = {\r\n        method: \"PUT\",\r\n        headers: {\r\n          Authorization: \"Bearer \" + this.props.token,\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          assigned_user: assignUser,\r\n          task_date: taks_date,\r\n          task_time: taks_time,\r\n          time_zone: time_zone,\r\n          is_completed: is_completed,\r\n          task_msg: taskdescirption,\r\n        }),\r\n      };\r\n      fetch(\r\n        \"https://stage.api.sloovi.com/task/lead_04412ba1d622466cab1f0ad941fcf303/\" +\r\n          id,\r\n        requestOptions\r\n      )\r\n        .then((response) => response.json())\r\n        .then((data) => {\r\n          alert(\"Update succesfully\");\r\n          this.getTask();\r\n          this.setState({\r\n            taskdescirption: \"\",\r\n            taks_time: new Date(),\r\n            taks_date: new Date(),\r\n            assignUser: \"Ajithkumar\",\r\n            id: \"add\",\r\n            hide_show: false,\r\n          });\r\n        });\r\n    }\r\n  };\r\n\r\n \r\n\r\n\r\n  getTask = () => {\r\n    const requestOptions = {\r\n      method: \"GET\",\r\n      headers: {\r\n        Authorization: \"Bearer \" + this.props.token,\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n    fetch(\r\n      \"https://stage.api.sloovi.com/task/lead_04412ba1d622466cab1f0ad941fcf303\",\r\n      requestOptions\r\n    )\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        this.setState({ taskarray: data.results });\r\n      });\r\n  };\r\n\r\n\r\n \r\n\r\n\r\n\r\n  getTask_single = (id) => {\r\n    this.setState({ btn_id: \"update\", id: id });\r\n    const requestOptions = {\r\n      method: \"GET\",\r\n      headers: {\r\n        Authorization: \"Bearer \" + this.props.token,\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n    fetch(\r\n      \"https://stage.api.sloovi.com/task/lead_04412ba1d622466cab1f0ad941fcf303/\" +\r\n        id,\r\n      requestOptions\r\n    )\r\n      .then((response) => response.json())\r\n\r\n      .then((data) => {\r\n        {\r\n          var date_format = constant.stringToDate1(data.results.task_date);\r\n\r\n          this.setState({\r\n            taskdescirption: data.results.task_msg,\r\n            // taks_time: data.results.task_time,\r\n            taks_date: date_format,\r\n            assignUser: data.results.assigned_user,\r\n            hide_show: true,\r\n          });\r\n        }\r\n      });\r\n  };\r\n\r\n\r\n  getdeletetask = (id) => {\r\n    const requestOptions = {\r\n      method: \"DELETE\",\r\n      headers: {\r\n        Authorization: \"Bearer \" + this.props.token,\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n    fetch(\r\n      \"https://stage.api.sloovi.com/task/lead_04412ba1d622466cab1f0ad941fcf303/\" +\r\n        id,\r\n      requestOptions\r\n    )\r\n      .then((response) => response.json())\r\n\r\n      .then((data) => {\r\n        {\r\n          alert(\"delete success\");\r\n          this.getTask();\r\n\r\n\r\n        }\r\n      });\r\n  };\r\n\r\n  hide_and_show = () => {\r\n    this.setState({ hide_show: true });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <section className=\"mt-5\">\r\n        <Container>\r\n          <Row>\r\n            <Col md={12} className=\"text-center\">\r\n              <h5>Task Management</h5>\r\n            </Col>\r\n          </Row>\r\n\r\n          <Row>\r\n            <Col md={{ span: 8, offset: 2 }}>\r\n              <div className=\"task_card_wrapper\">\r\n                <div>\r\n                  <h6>Add Taks</h6>\r\n                </div>\r\n\r\n                <div>\r\n                  <i\r\n                    onClick={this.hide_and_show}\r\n                    className=\"fa fa-plus\"\r\n                    aria-hidden=\"true\"\r\n                  ></i>\r\n                </div>\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n          {this.state.hide_show && (\r\n            <Row>\r\n              <Col md={{ span: 8, offset: 2 }}>\r\n                <Form>\r\n                  <Form.Group controlId=\"formBasicEmail\">\r\n                    <Form.Label>Task Description</Form.Label>\r\n                    <Form.Control\r\n                      name=\"taskdescription\"\r\n                      value={this.state.taskdescirption}\r\n                      onChange={this.handlechange}\r\n                      type=\"text\"\r\n                      placeholder=\"Task description\"\r\n                    />\r\n                  </Form.Group>\r\n\r\n                  <Row>\r\n                    <Col md={4}>\r\n                      <DatePicker\r\n                        name=\"taks_date\"\r\n                        selected={this.state.taks_date}\r\n                        minDate={new Date()}\r\n                        onChange={(date) => {\r\n                          this.OnchangeTaskDate(date);\r\n                        }}\r\n                        dateFormat=\"dd-MM-yyyy\"\r\n                      />\r\n                    </Col>\r\n                    <Col md={4}>\r\n                      <DatePicker\r\n                        className=\"\"\r\n                        selected={this.state.taks_time}\r\n                        onChange={(date) => {\r\n                          this.OnchangeTaskTime(date);\r\n                        }}\r\n                        showTimeSelect\r\n                        showTimeSelectOnly\r\n                        // timeIntervals={30}\r\n                        timeCaption=\"Time\"\r\n                        dateFormat=\"h:mm aa\"\r\n                      />\r\n                    </Col>\r\n                  </Row>\r\n                  <Row>\r\n                    <Form.Group as={Col} controlId=\"formGridState\">\r\n                      <Form.Label>Assign User</Form.Label>\r\n                      <Form.Control\r\n                        as=\"select\"\r\n                        as=\"select\"\r\n                        value={this.state.assignUser}\r\n                        onChange={this.assignFunction}\r\n                      >\r\n                        <option value=\"Ajithkumar\">Ajith Kumar</option>\r\n                        <option value=\"Vijay\">Vijay</option>\r\n                        <option value=\"Kamal\">Kamal</option>\r\n                      </Form.Control>\r\n                    </Form.Group>\r\n                  </Row>\r\n\r\n                  <Row>\r\n                    <Col md={12} className=\"submit_wrapper\">\r\n                      <div>\r\n                        <Button\r\n                          variant=\"primary\"\r\n                          type=\"button\"\r\n                          onClick={this.handleSubmit}\r\n                        >\r\n                          Submit\r\n                        </Button>\r\n                      </div>\r\n                    </Col>\r\n                  </Row>\r\n                </Form>\r\n              </Col>\r\n            </Row>\r\n          )}\r\n          <Row className=\"mt-4\">\r\n            <Col md={12}>\r\n              <Table striped bordered hover>\r\n                <thead>\r\n                  <tr>\r\n                    <th>sno</th>\r\n                    <th>assigned_user</th>\r\n                    <th>task_date</th>\r\n\r\n                    <th>task_msg</th>\r\n                    <th>Edit</th>\r\n                    <th>Delete</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {this.state.taskarray.map((item, id) => {\r\n                    return (\r\n                      <tr>\r\n                        <td>{id + 1}</td>\r\n                        <td>{item.assigned_user}</td>\r\n                        <td>{item.task_date}</td>\r\n\r\n                        <td>{item.task_msg}</td>\r\n                        <td>\r\n                          <i\r\n                            onClick={() => {\r\n                              this.getTask_single(item.id);\r\n                            }}\r\n                            class=\"fa fa-edit\"\r\n                            aria-hidden=\"true\"\r\n                          ></i>\r\n                        </td>\r\n                        <td>\r\n                          <i\r\n                            onClick={() => {\r\n                              this.getdeletetask(item.id);\r\n                            }}\r\n                            class=\"fa fa-trash\"\r\n                            aria-hidden=\"true\"\r\n                          ></i>\r\n                        </td>\r\n                      </tr>\r\n                    );\r\n                  })}\r\n                </tbody>\r\n              </Table>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    token: state.Login.token,\r\n    taskarray: state.Login.taskarray,\r\n    deleteTask: state.Login.deleteTask,\r\n  };\r\n};\r\nexport default connect(mapStateToProps, null)(Task);\r\n","\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport {\n  BrowserRouter,\n  Switch,\n  Route,\n} from \"react-router-dom\";\n\nimport Taks from './compoents/Taks/Taks';\n\nfunction App() {\n  return (\n    <BrowserRouter>\n    <Switch>\n\n      <Route exact path=\"/\" name=\"Task\" render={props => <Taks {...props} />} />\n    </Switch>\n  </BrowserRouter>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { USER_LOGIN,TASK_ARRAY,DELETE_TASk } from \"../action/Task\";\r\n\r\n\r\nconst initialState = {\r\n  cartproducts: [],\r\n  message:'',\r\n  token:'',\r\n  taskarray:[],\r\n  deleteTask:''\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case USER_LOGIN:\r\n        {\r\n         \r\n            return{\r\n                token:action.token,\r\n            };\r\n        } \r\n        case TASK_ARRAY:\r\n            {\r\n              console.log(action.taskarray_data)\r\n                return{\r\n                    taskarray:action.taskarray_data,\r\n                };\r\n            } \r\n\r\n            case DELETE_TASk:\r\n              {\r\n                  return{\r\n                    deleteTask:action.deleteTask,\r\n                  };\r\n              } \r\n        \r\n      \r\n\r\n\r\n\r\n    \r\n  }\r\n\r\n  return state;\r\n};\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport {Provider} from 'react-redux';\n\nimport Login from './redux/reducer/Task';\nimport * as redux from \"redux\";\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { persistStore, persistReducer } from 'redux-persist'\nimport storage from 'redux-persist/lib/storage';\nimport { PersistGate } from 'redux-persist/integration/react';\n\nconst rootReducer = redux.combineReducers({\n  Login :Login,\n\n \n });\n\n const persistConfig = {\n  key: 'root',\n  storage,\n}\nconst persistedReducer = persistReducer(persistConfig, rootReducer)\n\nconst store = redux.createStore(persistedReducer,composeWithDevTools(redux.applyMiddleware(thunk)));\n\nconst persistor = persistStore(store);\n\nReactDOM.render(\n  <Provider store={store}>\n  <PersistGate loading={null} persistor={persistor}>\n  <App />\n     </PersistGate>\n</Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}